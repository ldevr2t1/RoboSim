swagger: '2.0'
info:
  title: Team 1 Robot Simulation API
  description: Stores and Retrieves information needed for the robot simulation
  version: "1.0.0"
# the domain of the service
host: port:8000
# array of all schemes that your API supports
schemes:
  - https
basePath: /v1
paths:
  /:
    get:
      summary: Problems
      tags:
        - Problems
      description: |
        Returns a list of all of the Problems generated. This can be an empty list.
      operationId: getProblems
      produces:
        - application/json
        - application/xml
      responses:
        '200':
          description: An array of Problems
          schema:
            type: array
            items:
              $ref: '#/definitions/Problem'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    post:
      tags:
        - Problems
      summary: Creates a new problem and returns a problemID
      description: ""
      operationId: addProblem
      produces:
        - application/json
        - application/xml
      responses:
        '200':
          description: The id of the new problem generated
          schema:
            type: integer
            format: int32
        '405':
          description: Invalid input  
  /id={problem_id}/:
    get:
      summary: Problems
      tags:
        - Problem
      description: |
        Returns a specific problem
      operationId: getProblem
      produces:
        - application/json
        - application/xml
      parameters:
        - name: problem_id
          in: path
          description: The id of the problem being manipulated
          type: integer
          format: int32
          required: true  
      responses:
        '200':
          description: A Problem type, containing all values
          schema:
            $ref: '#/definitions/Problem'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    put:
      tags:
        - Problem
      summary: Update the existing problem
      description: ""
      operationId: updateProblem
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml        
      parameters:
        - name: problem_id
          in: path
          description: The id of the problem being manipulated
          type: integer
          format: int32
          required: true          
        - name: problem
          in: body
          description: Problem object that needs to be updated.
          required: true
          schema:
            $ref: '#/definitions/Problem'
      responses:
        '405':
          description: Validation exception
        '404':
          description: Problem not found    
    delete:
      tags:
        - Problem
      summary: Delete Problem
      description: This removes the problem by the given ID
      operationId: deleteProblem
      produces:
        - application/json
        - application/xml    
      parameters:
        - name: problem_id
          in: path
          description: The id of the problem being manipulated
          type: integer
          format: int32
          required: true          
      responses:
        '404':
          description: Problem not found
        '400':
          description: Invalid ID supplied   
definitions:
  Problem:
    type: object
    properties:
      problem_id:
        type: integer
        format: int32
      data:
        type: object
  Error:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      fields:
        type: string
